/*! react-kui v1.0.7 by chuchur (c) 2018 Licensed ISC */
(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{287:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=f(l(6)),a=f(l(5)),r=f(l(4)),d=f(l(3)),u=f(l(2)),i=f(l(1)),c=l(21),o=f(l(325)),s=f(l(332));function f(e){return e&&e.__esModule?e:{default:e}}var h=function(e){function t(e){(0,a.default)(this,t);var l=(0,d.default)(this,(t.__proto__||(0,n.default)(t)).call(this,e));return l.state={data:[{title:"商品分类",expand:!0,value:"001",children:[{title:"手机",expand:!0,value:"002",children:[{title:"Iphone 8"},{title:"Iphone X"}]},{title:"电脑",expand:!0,value:"003",children:[{title:"MacPro"},{title:"小米Pro"}]}]}],data1:[{title:"商品分类",expand:!1,loading:!1,children:[]}]},l}return(0,u.default)(t,e),(0,r.default)(t,[{key:"queryChange",value:function(e){var t=this,l=["iphone4","iphone4s","iphone5","iphone5s","iphone6","iphone6s","iphone7","iphone8","iphone X","华为P20"],n=["mac pro","戴尔E50","联想600","宏基S40","联想小新","小米air","mac air","suffice"];setTimeout(function(){var e=[{title:"商品分类",expand:!0,children:[{title:"手机",expand:!0,children:[{title:l[parseInt(10*Math.random())],loading:!1},{title:l[parseInt(10*Math.random())],loading:!1}]},{title:"电脑",expand:!0,children:[{title:n[parseInt(10*Math.random())],loading:!1},{title:n[parseInt(10*Math.random())],loading:!1}]}]}];t.setState({data1:e})},1e3)}},{key:"loadData",value:function(e,t){setTimeout(function(){t([{title:"children",loading:!1,children:[]},{title:"children",loading:!1,children:[]}])},1e3)}},{key:"onChange",value:function(e,t){return"001"==e.value?(c.Message.error("不能选择根目录"),t(!0)):"Iphone 8"==e.title?(c.Message.error("不能选择Iphone 8"),t(!0)):void t(!1)}},{key:"render",value:function(){var e=this.state,t=e.data,l=e.data1;return i.default.createElement("div",null,i.default.createElement("h2",null,"TreeSelect 树选择"),i.default.createElement("p",null,"类似 Select 的选择控件，可选择的数据结构是一个树形结构时，可以使用 TreeSelect，例如公司层级、学科系统、分类目录等等。"),i.default.createElement("h3",null,"代码示例"),i.default.createElement(c.Row,{gutter:"8"},i.default.createElement(c.Col,{span:"12"},i.default.createElement(o.default,{title:"基本用法"},i.default.createElement("div",null,i.default.createElement(c.TreeSelect,{data:t})),i.default.createElement("div",null,i.default.createElement("code",null,"data"),"指定Tree的值"),i.default.createElement("div",null,s.default.base)),i.default.createElement(o.default,{title:"选择和回调"},i.default.createElement("div",null,i.default.createElement(c.TreeSelect,{data:t,onChange:this.onChange.bind(this)})),i.default.createElement("div",null,"通过",i.default.createElement("code",null,"change"),"来确认选中值"),i.default.createElement("div",null,s.default.callback))),i.default.createElement(c.Col,{span:"12"},i.default.createElement(o.default,{title:"异步和搜索"},i.default.createElement("div",null,i.default.createElement(c.TreeSelect,{data:l,clearable:!0,queryable:!0,onQueryChange:this.queryChange.bind(this),onLoadData:this.loadData.bind(this)})),i.default.createElement("div",null,"Tree的一步加载和组件",i.default.createElement("code",null,"Tree"),"用法一样"),i.default.createElement("div",null,s.default.async)))),i.default.createElement("h3",null,"TreeSelect API"),i.default.createElement("div",{className:"table-border"},i.default.createElement("table",null,i.default.createElement("tbody",null,i.default.createElement("tr",null,i.default.createElement("th",null,"属性"),i.default.createElement("th",null,"说明"),i.default.createElement("th",null,"类型"),i.default.createElement("th",null,"默认值")),i.default.createElement("tr",null,i.default.createElement("td",null,"data"),i.default.createElement("td",null,"可嵌套的节点属性的数组，生成 tree 的数据"),i.default.createElement("td",null,"Array"),i.default.createElement("td",null,"[]")),i.default.createElement("tr",null,i.default.createElement("td",null,"vlaue"),i.default.createElement("td",null,"Tree选中的value值"),i.default.createElement("td",null,"String, Number"),i.default.createElement("td",null,"-")),i.default.createElement("tr",null,i.default.createElement("td",null,"label"),i.default.createElement("td",null,"默认显示文字，Tree选中的标题"),i.default.createElement("td",null,"String"),i.default.createElement("td",null,"-")),i.default.createElement("tr",null,i.default.createElement("td",null,"placeholder"),i.default.createElement("td",null,"默认提示文字"),i.default.createElement("td",null,"String"),i.default.createElement("td",null,"请选择")),i.default.createElement("tr",null,i.default.createElement("td",null,"clearable"),i.default.createElement("td",null,"是否显示清空按钮"),i.default.createElement("td",null,"Bolean"),i.default.createElement("td",null,"false")),i.default.createElement("tr",null,i.default.createElement("td",null,"queryable"),i.default.createElement("td",null,"是否显示查询输入框"),i.default.createElement("td",null,"Bolean"),i.default.createElement("td",null,"false")),i.default.createElement("tr",null,i.default.createElement("td",null,"queryPlaceholder"),i.default.createElement("td",null,"搜索框提示文字"),i.default.createElement("td",null,"String"),i.default.createElement("td",null,"请输入关键字查询")),i.default.createElement("tr",null,i.default.createElement("td",null,"onLoadData"),i.default.createElement("td",null,"异步加载数据的方法"),i.default.createElement("td",null,"Function"),i.default.createElement("td",null,"-")),i.default.createElement("tr",null,i.default.createElement("td",null,"onQueryChange"),i.default.createElement("td",null,"搜索查询回调"),i.default.createElement("td",null,"Function"),i.default.createElement("td",null,"-")),i.default.createElement("tr",null,i.default.createElement("td",null,"onChange"),i.default.createElement("td",null,"节点选中回调"),i.default.createElement("td",null,"Function"),i.default.createElement("td",null,"-"))))))}}]),t}(i.default.Component);t.default=h},324:function(e,t,l){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=m(l(12)),a=m(l(6)),r=m(l(5)),d=m(l(4)),u=m(l(3)),i=m(l(2)),c=m(l(1)),o=m(l(326)),s=l(21),f=l(7),h=m(l(54));function m(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function t(e){(0,r.default)(this,t);var l=(0,u.default)(this,(t.__proto__||(0,a.default)(t)).call(this,e));return l.state={domHeight:0,demoHeight:0,codeHeight:0,expand:!1},l.toggle=l.toggle.bind(l),l}return(0,i.default)(t,e),(0,d.default)(t,[{key:"icons",value:function(){return this.state.expand?"code-working":"code"}},{key:"classes",value:function(){return this.className(["k-demo",(0,n.default)({},"k-demo-"+this.props.layout,this.props.layout)])}},{key:"demoStyles",value:function(){return"horizontal"==this.props.layout?{height:this.state.expand?this.state.domHeight+"px":this.state.demoHeight+"px"}:{}}},{key:"codeStyles",value:function(){return"horizontal"==this.props.layout?{}:{height:""+this.state.codeHeight}}},{key:"toggle",value:function(){this.state.expand;this.setState({expand:!this.state.expand}),"vertical"==this.props.layout&&this.setState({codeHeight:this.state.expand?"auto":0})}},{key:"setHeight",value:function(){"horizontal"==this.props.layout&&this.setState({domHeight:this.refs.dom.scrollHeight,demoHeight:this.refs.demo.scrollHeight})}},{key:"componentDidMount",value:function(){this.setHeight()}},{key:"render",value:function(){return c.default.createElement("div",{className:this.classes(),style:this.styles(this.demoStyles()),ref:"dom"},c.default.createElement("div",{className:"k-demo-main",ref:"demo"},c.default.createElement("div",{className:"k-content"},this.props.children[0]),c.default.createElement("div",{className:"k-desc"},c.default.createElement("a",{className:"k-desc-title"},this.props.title),c.default.createElement("div",{className:"k-desc-content"},this.props.children[1]),c.default.createElement("a",{className:"k-code-expan",onClick:this.toggle},c.default.createElement(s.Icon,{type:this.icons()})))),c.default.createElement("div",{className:"k-demo-line"}),c.default.createElement(h.default,{show:this.state.expand},c.default.createElement(o.default,{style:this.styles(this.codeStyles()),ref:"code",lang:this.props.lang},this.props.children[2])))}}]),t}(f.Kui);t.default=p,p.propTypes={layout:f.PropTypes.string,title:f.PropTypes.string,lang:f.PropTypes.string},p.defaultProps={layout:"vertical"}},325:function(e,t,l){"use strict";l.r(t);var n=l(324),a=l.n(n);t.default=a.a},332:function(e,t,l){"use strict";l.r(t);let n={base:"import { TreeSelect } from 'react-kui';\nconstructor(props) {\n  super(props)\n  this.state = {\n    data: [\n      {\n        title: '商品分类',\n        expand: true,\n        value: '001',\n        children: [\n          {\n            title: '手机',\n            expand: true,\n            value: '002',\n            children: [\n              { title: 'Iphone 8' },\n              { title: 'Iphone X' }\n            ]\n          },\n          {\n            title: '电脑',\n            expand: true,\n            value: '003',\n            children: [\n              { title: 'MacPro' },\n              { title: '小米Pro' }\n            ]\n          }\n        ]\n      }\n    ],\n  }\n}\nReactDOM.render() {\n  return <TreeSelect data={this.state.data} />\n}",async:"import { TreeSelect } from 'react-kui';\nconstructor(props) {\n  super(props)\n  this.state = {\n    data: [{\n      title: '商品分类',\n      expand: false,\n      loading: false,\n      children: []\n    }]\n  }\n}\nqueryChange(value) {\n  let phones = ['iphone4', 'iphone4s', 'iphone5', 'iphone5s', 'iphone6', 'iphone6s', 'iphone7', 'iphone8', 'iphone X', '华为P20',]\n  let computers = ['mac pro', '戴尔E50', '联想600', '宏基S40', '联想小新', '小米air', 'mac air', 'suffice',]\n  //模拟异步请求\n  setTimeout(() => {\n    let data = [\n      {\n        title: '商品分类',\n        expand: true,\n        children: [\n          {\n            title: '手机',\n            expand: true,\n            children: [\n              { title: phones[parseInt(Math.random() * 10)], loading: false, },\n              { title: phones[parseInt(Math.random() * 10)], loading: false, }\n            ]\n          },\n          {\n            title: '电脑',\n            expand: true,\n            children: [\n              { title: computers[parseInt(Math.random() * 10)], loading: false, },\n              { title: computers[parseInt(Math.random() * 10)], loading: false, }\n            ]\n          }\n        ]\n      }\n    ]\n    this.setState({data})\n  }, 1000)\n}\nloadData(item, callback) {\n  //模拟异步请求\n  setTimeout(() => {\n    let data = [\n      {\n        title: 'children',\n        loading: false,\n        children: []\n      },\n      {\n        title: 'children',\n        loading: false,\n        children: []\n      }\n    ];\n    callback(data);\n  }, 1000)\n}\nReactDOM.render() {\n  return <TreeSelect data={this.state.data} clearable queryable \n            onQueryChange={this.queryChange.bind(this)} \n            onLoadData={this.loadData.bind(this)} />\n}",callback:"import { TreeSelect } from 'react-kui';\nconstructor(props) {\n  super(props)\n  this.state = {\n    data: [\n      {\n        title: '商品分类',\n        expand: true,\n        value: '001',\n        children: [\n          {\n            title: '手机',\n            expand: true,\n            value: '002',\n            children: [\n              { title: 'Iphone 8' },\n              { title: 'Iphone X' }\n            ]\n          },\n          {\n            title: '电脑',\n            expand: true,\n            value: '003',\n            children: [\n              { title: 'MacPro' },\n              { title: '小米Pro' }\n            ]\n          }\n        ]\n      }\n    ],\n  }\n}\nonChange(item, callback) {\n  if (item.value == '001') {\n    Message.error('不能选择根目录');\n    return callback(true)\n  }\n  if (item.title == 'Iphone 8') {\n    Message.error('不能选择Iphone 8');\n    return callback(true)\n  }\n  callback(false)\n}\nReactDOM.render() {\n  return <TreeSelect data={data} onChange={this.onChange.bind(this)} />\n}"};t.default=n}}]);